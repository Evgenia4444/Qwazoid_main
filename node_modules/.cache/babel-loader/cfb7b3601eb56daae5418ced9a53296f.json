{"ast":null,"code":"var _jsxFileName = \"/Users/yevgenia/Desktop/Web-development/conspiracy-main-test/app/javascript/components/Navbar.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport '../../assets/stylesheets/Navbar.css';\n\nvar Navbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  var _super = _createSuper(Navbar);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _super.call(this, props);\n    _this.handleLoginClick = _this.handleLoginClick.bind(_assertThisInitialized(_this));\n    _this.handleLogoutClick = _this.handleLogoutClick.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isLoggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"handleLoginClick\",\n    value: function handleLoginClick() {\n      this.setState({\n        isLoggedIn: true\n      });\n    }\n  }, {\n    key: \"handleLogoutClick\",\n    value: function handleLogoutClick() {\n      this.setState({\n        isLoggedIn: false\n      });\n    }\n  }, {\n    key: \"handleSignUpClick\",\n    value: function handleSignUpClick() {\n      this.setState({\n        isLoggedIn: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoggedIn = this.state.isLoggedIn;\n      var button;\n\n      if (isLoggedIn) {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.handleLogoutClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }\n        });\n      } else {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.handleLoginClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }\n        });\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.handleSignUpClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleLoginClick,\n        className: \"navbar_action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, \"Sign hvh\"), \");\", /*#__PURE__*/React.createElement(\"button\", {\n        className: \"navbar_action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Sign up\"));\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/yevgenia/Desktop/Web-development/conspiracy-main-test/app/javascript/components/Navbar.js"],"names":["React","PropTypes","Navbar","props","handleLoginClick","bind","handleLogoutClick","state","isLoggedIn","setState","button","handleSignUpClick","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qCAAP;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AACA,UAAKE,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAJiB;AAKlB;;;;WAED,4BAAmB;AACjB,WAAKC,QAAL,CAAc;AAACD,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD;;;WAED,6BAAoB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD;;;WAED,6BAAoB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD;;;WAID,kBAAU;AACR,UAAMA,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AACA,UAAIE,MAAJ;;AAEA,UAAIF,UAAJ,EAAgB;AACdE,QAAAA,MAAM,gBAAG;AAAQ,UAAA,OAAO,EAAE,KAAKJ,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAFD,MAEO;AACLI,QAAAA,MAAM,gBAAG;AAAQ,UAAA,OAAO,EAAE,KAAKN,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACAM,QAAAA,MAAM,gBAAG;AAAQ,UAAA,OAAO,EAAE,KAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,KAAKP,gBAAtB;AAAwC,QAAA,SAAS,EAAC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,qBAIE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF;AAWD;;;;EA5CkBJ,KAAK,CAACY,S;;AAgD3B,eAAeV,MAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport '../../assets/stylesheets/Navbar.css'\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {isLoggedIn: false};\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  handleSignUpClick() {\n    this.setState({isLoggedIn: false});\n  }\n \n\n\n  render () {\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n\n    if (isLoggedIn) {\n      button = <button onClick={this.handleLogoutClick}></button> ;\n    } else {\n      button = <button onClick={this.handleLoginClick}></button> ;\n      button = <button onClick={this.handleSignUpClick}></button> ;\n    }\n\n    return (\n      <div className=\"navbar_container\">\n        <button onClick={this.handleLoginClick} className='navbar_action'>\n        Sign hvh\n      </button>);\n        <button className='navbar_action'>\n          Sign up\n        </button>\n       \n      </div>\n    );\n  }\n}\n\n\nexport default Navbar"]},"metadata":{},"sourceType":"module"}